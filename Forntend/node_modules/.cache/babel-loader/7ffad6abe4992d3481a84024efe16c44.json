{"ast":null,"code":"import _toConsumableArray from \"/Users/tarunkumar/Documents/React code/NoteBook/inotebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tarunkumar/Documents/React code/NoteBook/inotebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tarunkumar/Documents/React code/NoteBook/inotebook/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/**\n * React Router DOM v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!searchParams.has(key)) {\n          defaultSearchParams.getAll(key).forEach(function (value) {\n            searchParams.append(key, value);\n          });\n        }\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n  var body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = _attr ? stripBasename(_attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      var name = target.name,\n        type = target.type,\n        value = target.value;\n      if (type === \"image\") {\n        var prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action: action,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData,\n    body: body\n  };\n}\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n  for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n    var _entries$_i = _slicedToArray(_entries[_i], 2),\n      key = _entries$_i[0],\n      val = _entries$_i[1];\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      var error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nvar START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    future = _ref.future,\n    window = _ref.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setStateImpl = _React$useState2[1];\n  var _ref9 = future || {},\n    v7_startTransition = _ref9.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n    children = _ref2.children,\n    future = _ref2.future,\n    window = _ref2.window;\n  var historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n  var history = historyRef.current;\n  var _React$useState3 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    state = _React$useState4[0],\n    setStateImpl = _React$useState4[1];\n  var _ref10 = future || {},\n    v7_startTransition = _ref10.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n    children = _ref3.children,\n    future = _ref3.future,\n    history = _ref3.history;\n  var _React$useState5 = React.useState({\n      action: history.action,\n      location: history.location\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    state = _React$useState6[0],\n    setStateImpl = _React$useState6[1];\n  var _ref11 = future || {},\n    v7_startTransition = _ref11.v7_startTransition;\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n    relative = _ref4.relative,\n    reloadDocument = _ref4.reloadDocument,\n    replace = _ref4.replace,\n    state = _ref4.state,\n    target = _ref4.target,\n    to = _ref4.to,\n    preventScrollReset = _ref4.preventScrollReset,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext.basename;\n  // Rendered into <a href> for absolute URLs\n  var absoluteHref;\n  var isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        var currentUrl = new URL(window.location.href);\n        var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        var path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n    ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n    _ref5$caseSensitive = _ref5.caseSensitive,\n    caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n    _ref5$className = _ref5.className,\n    classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n    _ref5$end = _ref5.end,\n    end = _ref5$end === void 0 ? false : _ref5$end,\n    styleProp = _ref5.style,\n    to = _ref5.to,\n    children = _ref5.children,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n    navigator = _React$useContext2.navigator;\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n    replace = _ref6.replace,\n    _ref6$method = _ref6.method,\n    method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n    action = _ref6.action,\n    onSubmit = _ref6.onSubmit,\n    submit = _ref6.submit,\n    relative = _ref6.relative,\n    preventScrollReset = _ref6.preventScrollReset,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      relative: relative,\n      preventScrollReset: preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n    storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  var _ref12 = _temp === void 0 ? {} : _temp,\n    target = _ref12.target,\n    replaceProp = _ref12.replace,\n    state = _ref12.state,\n    preventScrollReset = _ref12.preventScrollReset,\n    relative = _ref12.relative;\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmit),\n    router = _useDataRouterContext.router;\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext3.basename;\n  var currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, basename),\n      action = _getFormSubmissionInf.action,\n      method = _getFormSubmissionInf.method,\n      encType = _getFormSubmissionInf.encType,\n      formData = _getFormSubmissionInf.formData,\n      body = _getFormSubmissionInf.body;\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseSubmitFetcher),\n    router = _useDataRouterContext2.router;\n  var _React$useContext4 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext4.basename;\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    var _getFormSubmissionInf2 = getFormSubmissionInfo(target, basename),\n      action = _getFormSubmissionInf2.action,\n      method = _getFormSubmissionInf2.method,\n      encType = _getFormSubmissionInf2.encType,\n      formData = _getFormSubmissionInf2.formData,\n      body = _getFormSubmissionInf2.body;\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  var _ref13 = _temp2 === void 0 ? {} : _temp2,\n    relative = _ref13.relative;\n  var _React$useContext5 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext5.basename;\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var _routeContext$matches = routeContext.matches.slice(-1),\n    _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n    match = _routeContext$matches2[0];\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  var location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseFetcher),\n    router = _useDataRouterContext3.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  var _React$useState7 = React.useState(function () {\n      return String(++fetcherId);\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    fetcherKey = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n      return createFetcherForm(fetcherKey, routeId);\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    Form = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return function (href) {\n        !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n        router.fetch(fetcherKey, routeId, href);\n      };\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    load = _React$useState12[0];\n  var submit = useSubmitFetcher(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  var _ref14 = _temp3 === void 0 ? {} : _temp3,\n    getKey = _ref14.getKey,\n    storageKey = _ref14.storageKey;\n  var _useDataRouterContext4 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n    router = _useDataRouterContext4.router;\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n    restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n    preventScrollReset = _useDataRouterState.preventScrollReset;\n  var _React$useContext6 = React.useContext(UNSAFE_NavigationContext),\n    basename = _React$useContext6.basename;\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      var getKeyWithoutBasename = getKey && basename !== \"/\" ? function (location, matches) {\n        return getKey(\n        // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        }), matches);\n      } : getKey;\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKeyWithoutBasename);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        var el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  var _ref15 = options || {},\n    capture = _ref15.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  var _ref16 = options || {},\n    capture = _ref16.capture;\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  var when = _ref8.when,\n    message = _ref8.message;\n  var blocker = unstable_useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["../dom.ts","../index.tsx"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","has","getAll","forEach","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashRouter","createHashHistory","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","error","message","stack","START_TRANSITION","startTransitionImpl","React","BrowserRouter","children","historyRef","useRef","current","v5Compat","setStateImpl","useState","location","v7_startTransition","setState","useCallback","newState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","HistoryRouter","displayName","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","ref","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","DataRouterStateContext","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","filter","Boolean","join","Form","props","submit","useSubmit","FormImpl","onSubmit","forwardedRef","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","useDataRouterState","replaceProp","navigate","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","router","UseSubmit","currentRouteId","useRouteId","options","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","_extends","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","when","blocker","useBlocker","reset","proceed","confirm","setTimeout"],"mappings":"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","sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}